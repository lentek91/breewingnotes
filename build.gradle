buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

plugins {
//    id 'org.springframework.boot' version '2.2.4.RELEASE'
//    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
//    id 'java'
    id 'idea'
    id 'com.vaadin' version '0.5.0'
}

//idea {
//    module {
//        inheritOutputDirs = false;
//        outputDir = file("$buildDir/clases/main")
//    }
//}

//defaultTasks("clean", "vaadinBuildFrontend", "build")

group = 'pl.lentek'
version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '1.8'

//repositories {
//    mavenCentral()
//    jcenter()
//}

ext {
    set('vaadinVersion', "14.1.16")
}

//configurations {
//    developmentOnly
//    runtimeClasspath {
//        extendsFrom developmentOnly
//    }
//}

dependencies {
}


def allSubProjects() {
    return subprojects.findAll()
}

def businessProjects() {
    return allSubProjects().findAll { it.name.equals('business') || it.name.equals('application') }
}

def viewSubProjects() {
    return allSubProjects().findAll { it.name.equals('view') || it.name.equals('application') }
}

configure(allSubProjects()) {
    apply plugin: 'java'
    apply plugin: 'idea'

    compileJava.options.encoding = 'UTF-8'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }
}

configure(viewSubProjects()) {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.vaadin'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:2.2.4.RELEASE"
            mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        implementation('com.vaadin:vaadin-spring-boot-starter') {
            ["com.vaadin.webjar", "org.webjars.bowergithub.insites",
             "org.webjars.bowergithub.polymer", "org.webjars.bowergithub.polymerelements",
             "org.webjars.bowergithub.vaadin", "org.webjars.bowergithub.webcomponents"]
                    .forEach { group -> exclude(group: group) }
        }

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    test {
        useJUnitPlatform()
    }
}

configure(businessProjects()) {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.vaadin'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:2.2.4.RELEASE"
            mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        runtimeOnly 'mysql:mysql-connector-java'

        // Dependency for testing
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform()
    }
}